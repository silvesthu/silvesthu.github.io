<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HLSL on Indefinite Seven</title>
    <link>https://silvesthu.github.io/tags/hlsl/</link>
    <description>Recent content in HLSL on Indefinite Seven</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 May 2020 07:45:52 +0900</lastBuildDate>
    
	<atom:link href="https://silvesthu.github.io/tags/hlsl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HLSL pitfalls</title>
      <link>https://silvesthu.github.io/posts/hlsl-pitfalls/</link>
      <pubDate>Sun, 24 May 2020 07:45:52 +0900</pubDate>
      
      <guid>https://silvesthu.github.io/posts/hlsl-pitfalls/</guid>
      <description>I&#39;ve encountered several issues of HLSL, and lucky enough found most workaround/solution on internet.
It doesn&#39;t feel right for anyone to remember all these.
Denormalized float, small float/large uint This is a FXC only issue.
First, there is asfloat(0x7FFFFF) =&amp;gt; 0 from
Low-level Shader Optimization for Next-Gen and DX11 by Emil Persson.
That is, asfloat always gives 0 if you feed bits fit denormalized pattern.
Then, floats smaller than 1e-6 won&#39;t make their way into output.</description>
    </item>
    
  </channel>
</rss>